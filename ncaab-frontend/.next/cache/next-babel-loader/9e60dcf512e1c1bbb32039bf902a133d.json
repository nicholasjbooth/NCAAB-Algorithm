{"ast":null,"code":"// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n// import axios from 'axios'\n// import Cors from 'cors';\n// // Initializing the cors middleware\n// const cors = Cors({\n// \tmethods: ['GET', 'HEAD']\n// });\n// // Helper method to wait for a middleware to execute before continuing\n// // And to throw an error when an error happens in a middleware\n// function runMiddleware(req, res, fn) {\n// \treturn new Promise((resolve, reject) => {\n// \t\tfn(req, res, (result) => {\n// \t\t\tif (result instanceof Error) {\n// \t\t\t\treturn reject(result);\n// \t\t\t}\n// \t\t\treturn resolve(result);\n// \t\t});\n// \t});\n// }\n// \t// Run the middleware\n// \tawait runMiddleware(req, res, cors);\n//   // Rest of the API logic\nconsole.log(\"here\");\nawait fetch(\"http://localhost:5000/calculate\").then(data => {\n  res.json(data);\n});\nexport default handler;","map":{"version":3,"sources":["/Users/jamespeccia/OneDrive/Projects/ncaab/ncaab-frontend/pages/api/hello.js"],"names":["console","log","fetch","then","data","res","json","handler"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACEA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,MAAMC,KAAK,CAAC,iCAAD,CAAL,CAAyCC,IAAzC,CAA8CC,IAAI,IAAI;AAACC,EAAAA,GAAG,CAACC,IAAJ,CAASF,IAAT;AAAe,CAAtE,CAAN;AAEF,eAAeG,OAAf","sourcesContent":["// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n// import axios from 'axios'\n// import Cors from 'cors';\n\n// // Initializing the cors middleware\n// const cors = Cors({\n// \tmethods: ['GET', 'HEAD']\n// });\n\n// // Helper method to wait for a middleware to execute before continuing\n// // And to throw an error when an error happens in a middleware\n// function runMiddleware(req, res, fn) {\n// \treturn new Promise((resolve, reject) => {\n// \t\tfn(req, res, (result) => {\n// \t\t\tif (result instanceof Error) {\n// \t\t\t\treturn reject(result);\n// \t\t\t}\n// \t\t\treturn resolve(result);\n// \t\t});\n// \t});\n// }\n\n\n// \t// Run the middleware\n// \tawait runMiddleware(req, res, cors);\n//   // Rest of the API logic\n  console.log(\"here\")\n  await fetch(\"http://localhost:5000/calculate\").then(data => {res.json(data)})\n\nexport default handler;"]},"metadata":{},"sourceType":"module"}